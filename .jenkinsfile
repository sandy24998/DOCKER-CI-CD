pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                checkout scm // Jenkins automatically checks out the source code
            }
        }
        stage('Docker Build') {
            steps {
                sh 'docker build -t flask-app:latest .' 
            }
        }
        stage('Push to Dockerhub') {
    steps {
        withCredentials([usernamePassword(
            credentialsId: 'DockerHubCred', 
            usernameVariable: 'DOCKER_USER', 
            passwordVariable: 'DOCKER_PASS'
        )]) {
            sh '''
                docker login -u $DOCKER_USER -p $DOCKER_PASS
                docker image tag flask-app:latest $DOCKER_USER/flask-web-app:v1.0
                docker push $DOCKER_USER/flask-web-app:v1.0
            '''
        }
    }
}

        stage('Deploy') {
            steps {
                //sh 'docker stop flask-app || true && docker rm flask-app || true'
                sh 'docker compose up -d'
            }
        }
    }
}
